<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>软件设计师-知识产权</title>
      <link href="/2023/09/17/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7-%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/"/>
      <url>/2023/09/17/%E8%BD%AF%E8%80%83%E4%B8%AD%E7%BA%A7-%E7%9F%A5%E8%AF%86%E4%BA%A7%E6%9D%83/</url>
      
        <content type="html"><![CDATA[<h1 id="考查"><a href="#考查" class="headerlink" title="考查"></a>考查</h1><p>有2-3题，题号可能在10和12</p><h1 id="著作权"><a href="#著作权" class="headerlink" title="著作权"></a>著作权</h1><p>也称为版权，只作者对其创作的作品享有的人身权和财产权</p><p><strong>人身权包括发表权，署名权，修改权和保护作品完整权，其他权利均为财产权</strong></p><p>我国发表权保护期为作者终生及其死亡后的50年，署名权修改权保护作品完整权没有时间限制</p><h1 id="专利地域性"><a href="#专利地域性" class="headerlink" title="专利地域性"></a>专利地域性</h1><p>知识产权具有严格的地域性特点，即各国主管机关依照本国法律授予的产权只能在其本国领域内受保护，在其他国家不给与保护。</p><h1 id="计算机软件著作权"><a href="#计算机软件著作权" class="headerlink" title="计算机软件著作权"></a>计算机软件著作权</h1><p>计算机软件著作权的主体是享有著作权的人，根据<strong>《著作权法》</strong>和<strong>《计算机软件保护条例》</strong>的规定，计算机软件著作权的主题包括公民、法人和其他组织</p><p>计算机软件著作权的客体是指著作权法保护的计算机软件著作权的范围（受保护的对象）。根据《著作权法》第三条和《计算机保护条例》第二条的规定，著作权法保护的计算机软件是指计算机程序及其有关文档。</p><ol><li>计算机程序包括源程序和目标程序</li><li>文档一般以程序设计说明书、流程图和用户手册表现</li></ol><h2 id="权利"><a href="#权利" class="headerlink" title="权利"></a>权利</h2><p>《中华人民共和国著作权法》规定，软件作品享有软件著作权的人身权利和软件著作权的财产权</p><p>《计算机软件保护条例》规定，软件著作权人享有发表权和开发者身份权</p><h2 id="保护期"><a href="#保护期" class="headerlink" title="保护期"></a>保护期</h2><p>自软件开发完成之日起产生，期限为50年。保护期满，除开发者身份外，其他权利终止</p><h1 id="职务作品"><a href="#职务作品" class="headerlink" title="职务作品"></a>职务作品</h1><p>指公民在单位任职期间为执行本单位工作任务所开发的计算机软件作品</p><p><strong>职务作品的著作权属于该单位（职务作品开发者只有署名权）</strong></p><p>若开发的软件不是执行本职工作的结果，其著作权就不属于单位</p><p>如果该雇员主要使用了单位的设备，著作权不能属于该雇员个人享有</p><h1 id="委托开发"><a href="#委托开发" class="headerlink" title="委托开发"></a>委托开发</h1><p>委托开发的软件作品属于著作权法规定的委托软件作品</p><h2 id="著作权归属"><a href="#著作权归属" class="headerlink" title="著作权归属"></a>著作权归属</h2><p>《计算机软件保护条例》十一条规定，接受他人委托开发的软件，其著作权的归属由委托者与受委托者签订书面合同约定，无书面合同或者合同未作明确约定的，其著作权有受托人享有</p><h1 id="商业秘密权"><a href="#商业秘密权" class="headerlink" title="商业秘密权"></a>商业秘密权</h1><p>《反不正当竞争法》中商业秘密定义为“指部位公众所知悉的，能为权利人带来经济利益、具有实用性并经权利人采取保密措施的技术信息和经营信息”</p><h1 id="专利权申请"><a href="#专利权申请" class="headerlink" title="专利权申请"></a>专利权申请</h1><h2 id="原则"><a href="#原则" class="headerlink" title="原则"></a>原则</h2><p>专利申请人及其代理人在办理各种手续是都应当采用书面形式，一份专利申请文件只能就一项发明创造提出专利申请</p><p>两个或两个以上的人分别就同样的发明创造申请专利的，专利权授给最先申请人</p><h1 id="商标权"><a href="#商标权" class="headerlink" title="商标权"></a>商标权</h1><p>商标权的保护期限自核准注册之日起10年内有效，但可以根据其所有人的需要无限延长权利期限，在期限届满前6个月内申请续展注册，每次的有效期为10年。如果逾期则商标权终止</p><h1 id="商标注册"><a href="#商标注册" class="headerlink" title="商标注册"></a>商标注册</h1><p>先申请先得，同时申请则看谁先使用，都没使用则协商</p>]]></content>
      
      
      <categories>
          
          <category> 软考 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软考 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf笔记</title>
      <link href="/2023/07/02/Thymeleaf/"/>
      <url>/2023/07/02/Thymeleaf/</url>
      
        <content type="html"><![CDATA[<p>性能不高，高并发应使用前后段分离</p><p>代码自动提示需要thymeleaf插件</p><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><table><thead><tr><th>表达式名字</th><th>语法</th><th>用途</th></tr></thead><tbody><tr><td>变量取值</td><td>${…}</td><td>获取请求域，session域，对象等值，可以使用+拼接字符串或者用|包裹整个表达式</td></tr><tr><td>选择变量</td><td>*{…}</td><td>获取上下文对象值</td></tr><tr><td>消息</td><td>#{…}</td><td>获取国际化等值</td></tr><tr><td>链接</td><td>@{…}</td><td>生成链接</td></tr><tr><td>片段表达式</td><td>~{…}</td><td>引入公共页面片段</td></tr></tbody></table><h1 id="设置属性值"><a href="#设置属性值" class="headerlink" title="设置属性值"></a>设置属性值</h1><pre class="line-numbers language-none"><code class="language-none">th:attr&#x3D;表达式th:value&#x3D;表达式<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>th:要修改的属性名</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><ol><li>引入starer</li><li>springboot自动配置</li><li>开发页面</li></ol><p>自动配置了SpringTemplateEngine（模板引擎）和ThymeleafViewResolber（视图解析器）</p><p>默认文件存放路径在类路径下的&#x2F;templates&#x2F;</p><p>默认后缀为.html</p><p>使用时需要命名空间避免页面报错，没有命名空间也能正常运行</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>见html标签的xmlns属性</p><h2 id="行内写法"><a href="#行内写法" class="headerlink" title="行内写法"></a>行内写法</h2><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup">[[$&#123;...&#125;]]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用于直接显示值</p><h2 id="片段引用"><a href="#片段引用" class="headerlink" title="片段引用"></a>片段引用</h2><pre class="line-numbers language-none"><code class="language-none">th:fragment&#x3D;&quot;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>用于命名片段（也可使用id）</p><p><strong>使用</strong></p><pre class="line-numbers language-none"><code class="language-none">th:replace  替换掉当前标签th:include  将原标签内部的内容放入th:insert  插入到标签内部<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h1><table><thead><tr><th>th:text</th><th>文本的显示，其值会替换html中指定标签的值</th></tr></thead><tbody><tr><td>th:utext</td><td>支持heml的文本显示</td></tr><tr><td>th:value</td><td>给属性赋值</td></tr><tr><td>th:object</td><td>用于设置选定对象</td></tr><tr><td>th:if</td><td>条件判断，可以和th:unless配合使用</td></tr><tr><td>th:switch</td><td>选择判断，需要配合th:case使用</td></tr><tr><td>th:each</td><td>循环迭代</td></tr><tr><td>th:href</td><td>设置链接地址，需要用@{}</td></tr></tbody></table><p>th:each属性状态变量iterStat包含以下数据</p><ol><li>index属性，当前迭代索引，从0开始</li><li>count属性，当前迭代索引，从1开始</li><li>size属性，迭代变量中的元素总数</li><li>current属性，每次迭代的iter变量</li><li>even&#x2F;odd布尔属性，当前迭代是偶数还是奇数</li><li>first属性，是否是第一个，布尔值</li><li>last属性，是否是最后一个，布尔值</li></ol><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>可在Springboot的配置文件中配置前缀（文件路径）和后缀，有默认值</p><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.thymeleaf.prefix</span><span class="token punctuation">=</span><span class="token value attr-value">classpath:/templates/</span><span class="token key attr-name">spring.thymeleaf.suffix</span><span class="token punctuation">=</span><span class="token value attr-value">.html</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thymeleaf </tag>
            
            <tag> web开发 </tag>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>redis学习笔记</title>
      <link href="/2023/06/30/Redis/"/>
      <url>/2023/06/30/Redis/</url>
      
        <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><p>redis是一款高性能的NoSql系列的非关系型数据库</p><p><strong>特征</strong></p><p>数据之间没有关联关系</p><p>数据存储在内存中</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><ol><li>宝塔直接安装（不建议）</li><li>下载解压版的，ftp传到服务器再解压</li><li>ubantu和Debian可以使用apt命令安装</li></ol><p>配置是注意注释配置文件中的bind属性，不然redis只能本地访问</p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><pre class="line-numbers language-none"><code class="language-none">yum install gcc-c++makemake install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>默认安装路径<code>/usr/local/bin</code></p><p>redis默认不是后台启动</p><p>在配置文件中将daemonize改为yes设置后台启动</p><h1 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h1><h2 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h2><p>redis-server [配置文件路径]</p><h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">redis-cli <span class="token parameter variable">-p</span> <span class="token number">6379</span><span class="token function">ping</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="查看redis的进程是否开启"><a href="#查看redis的进程是否开启" class="headerlink" title="查看redis的进程是否开启"></a>查看redis的进程是否开启</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ps</span> -ef<span class="token operator">|</span><span class="token function">grep</span> redis<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="关闭redis服务"><a href="#关闭redis服务" class="headerlink" title="关闭redis服务"></a>关闭redis服务</h2><p>连接状态下使用shutdown</p><h1 id="redis-benchmark测试"><a href="#redis-benchmark测试" class="headerlink" title="redis-benchmark测试"></a>redis-benchmark测试</h1><p>redis-benchmark是一个压力测试工具</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 测试：100个并发连接 100000个请求</span>redis-benchmark <span class="token parameter variable">-h</span> localhost <span class="token parameter variable">-p</span> <span class="token number">6379</span> <span class="token parameter variable">-c</span> <span class="token number">100</span> <span class="token parameter variable">-n</span> <span class="token number">100000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h1><p>redis默认有16个数据库，默认第0个，可以使用select切换</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> <span class="token keyword">select</span> <span class="token number">3</span>OK<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>查看数据库所有key</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>></span> keys *<span class="token number">1</span><span class="token punctuation">)</span> <span class="token string">"myhash"</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token string">"counter:__rand_int__"</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token string">"name"</span><span class="token number">4</span><span class="token punctuation">)</span> <span class="token string">"mylist"</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token string">"key:__rand_int__"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>清除当前数据库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">flushdb<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>清除所有数据库</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">FLUSHALL<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>redis是单线程的</strong></p><p>redis基于内存操作，cpu不是redis性能瓶颈，redsi的瓶颈是机器内存和网络带宽</p><p><strong>redis可以用作数据库，缓存和消息中间件</strong></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">EXISTS <span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token comment"># 查看键是否存在</span>move <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>db<span class="token punctuation">]</span> <span class="token comment">#移动数据</span>del <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token comment">#移除数据</span>EXPIRE <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>time<span class="token punctuation">]</span> <span class="token comment">#设置过期时间，单位为秒</span>ttl <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token comment"># 查看当前key的剩余时间</span><span class="token builtin class-name">type</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token comment"># 查看当前key的类型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="五大基本数据类型"><a href="#五大基本数据类型" class="headerlink" title="五大基本数据类型"></a>五大基本数据类型</h1><h2 id="Reds-key"><a href="#Reds-key" class="headerlink" title="Reds-key"></a>Reds-key</h2><h2 id="String"><a href="#String" class="headerlink" title="String"></a>String</h2><p>redis的String是二进制安全的，可以包含任何数据，如数字，字符串，图片或者序列化对象</p><p>基本操作</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">set</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span> <span class="token comment"># 设置值</span>get <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token comment"># 获取值</span>keys * <span class="token comment"># 查看所有键</span>APPEND <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span> <span class="token comment"># 追加内容</span>STRLEN <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token comment"># 显示值的长度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">set</span> views <span class="token number">0</span>incr views <span class="token comment"># 自增1</span>decr views <span class="token comment"># 自减1</span>INCRBY views <span class="token number">10</span> <span class="token comment"># 指定自增步长为10</span>DECRBY views <span class="token number">5</span> <span class="token comment"># 指定自减步长为5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">GETRANGE <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span> <span class="token punctuation">[</span>endIndex<span class="token punctuation">]</span> <span class="token comment"># 截取字符串</span>SETRANGE <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>startIndex<span class="token punctuation">]</span> xx<span class="token comment"># 从索引为1的位置开始，替换后面的两位为xx</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">setex <span class="token comment"># 设置过期时间</span>setnx <span class="token comment"># 不存在再设置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">mset <span class="token comment"># 同时设置多个值，空格切分</span>mget <span class="token comment"># 同时获取多个值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">getset db redis<span class="token comment"># 获取db的值后将值设置为redis</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="List"><a href="#List" class="headerlink" title="List"></a>List</h2><p>在redis中，list是一个双向链表，可以用list实现栈，队列，阻塞队列</p><p>所有的list命令以L和R开头，表示从左边操作还是从右边操作</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">LPUSH list one <span class="token comment"># 将一个值或者多个值，插入到列表左侧头部</span>LRANGE list <span class="token number">0</span> <span class="token parameter variable">-1</span> <span class="token comment"># 获取list中的所有值</span><span class="token comment"># 移出列表的第一个元素</span>LPOPRPOP<span class="token comment"># 获取某一个值</span>LINDEX list <span class="token punctuation">[</span>索引<span class="token punctuation">]</span><span class="token comment"># 移出指定个数的值</span>lrem list <span class="token punctuation">[</span>数量<span class="token punctuation">]</span> <span class="token punctuation">[</span>值<span class="token punctuation">]</span><span class="token comment"># 移出列表的最后的一个元素并添加到新的列表中</span>rpoppush <span class="token punctuation">[</span>原列表<span class="token punctuation">]</span> <span class="token punctuation">[</span>新列表<span class="token punctuation">]</span><span class="token comment"># 更新当前下标的值</span>lset list <span class="token number">0</span> <span class="token punctuation">[</span>原来的值<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Set"><a href="#Set" class="headerlink" title="Set"></a>Set</h2><p>set中的值是不能重读的</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加</span>sadd myset <span class="token punctuation">[</span>值<span class="token punctuation">]</span><span class="token comment"># 查看</span>smermbers myset<span class="token comment"># 获取set中的元素个数</span>scard myset <span class="token comment"># 移出</span>srem myset <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment"># 随机删除一个set集合中的元素</span>spop myset<span class="token comment"># 查交集</span>sinter <span class="token punctuation">[</span>key1<span class="token punctuation">]</span> <span class="token punctuation">[</span>key2<span class="token punctuation">]</span><span class="token comment"># 并集</span>sunion <span class="token punctuation">[</span>key1<span class="token punctuation">]</span> <span class="token punctuation">[</span>key2<span class="token punctuation">]</span><span class="token comment"># 差集</span><span class="token function">sdiff</span> <span class="token punctuation">[</span>key1<span class="token punctuation">]</span> <span class="token punctuation">[</span>key2<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ZSet"><a href="#ZSet" class="headerlink" title="ZSet"></a>ZSet</h2><p>有序集合</p><p>不同成员会关联一个double类型的分数，通过分数来比较大小</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加</span>zadd key score1 member1<span class="token comment"># 获取成员数</span>zcard key<span class="token comment"># 查看全部</span>zrange key <span class="token number">0</span> <span class="token parameter variable">-1</span><span class="token comment"># 查看分数</span>zsore key member1<span class="token comment"># 查看对应的排名（0开始），升序</span>zrank key member<span class="token comment"># 降序</span>zrevrank key member<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Hash"><a href="#Hash" class="headerlink" title="Hash"></a>Hash</h2><p>Map集合</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加一个键值对</span>hset myhash <span class="token punctuation">[</span>键<span class="token punctuation">]</span> <span class="token punctuation">[</span>值<span class="token punctuation">]</span><span class="token comment"># 取值</span>hget myhash 键<span class="token comment"># 删除指定的key字段</span>hdel myhash 键<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="Springboot整合"><a href="#Springboot整合" class="headerlink" title="Springboot整合"></a>Springboot整合</h1><ol><li>引入spring-boot-starter-data-redis依赖</li><li>配置信息</li><li>测试类导入redisTemplate包</li><li>使用redisTemplate完成操作</li></ol><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><pre class="line-numbers language-properties" data-language="properties"><code class="language-properties"><span class="token key attr-name">spring.data.redis.host</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.33.131</span><span class="token key attr-name">spring.data.redis.port</span><span class="token punctuation">=</span><span class="token value attr-value">6379</span><span class="token key attr-name">spring.data.redis.password</span><span class="token punctuation">=</span><span class="token value attr-value">123456</span><span class="token key attr-name">spring.data.redis.database</span><span class="token punctuation">=</span><span class="token value attr-value">0</span><span class="token comment"># 选择第几个库</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h2><p>（已注入redisTemplate）</p><p>String类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">demo1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//String</span>        <span class="token comment">//set</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"wjf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//get</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//del</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>list类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">demo2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//list</span>        <span class="token comment">//push</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPush</span><span class="token punctuation">(</span><span class="token string">"name2"</span><span class="token punctuation">,</span><span class="token string">"v1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//range，查询</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> name2 <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token string">"name2"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name2<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//lpop，弹出</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">leftPop</span><span class="token punctuation">(</span><span class="token string">"name2"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>set类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>    <span class="token keyword">void</span> <span class="token function">demo3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">//set</span>        <span class="token comment">//add</span>        redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"name3"</span><span class="token punctuation">,</span><span class="token string">"v1"</span><span class="token punctuation">,</span><span class="token string">"v2"</span><span class="token punctuation">,</span><span class="token string">"v3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//查询.smerbers</span>        <span class="token class-name">Set</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> name3 <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">members</span><span class="token punctuation">(</span><span class="token string">"name3"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>hash类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">void</span> <span class="token function">demo4</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token comment">//hash</span>       <span class="token comment">//hset，添加单个值,添加多个值使用putAll方法</span>       redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"name4"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"wjf"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//获取，hget</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForHash</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name4"</span><span class="token punctuation">,</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>zset类型</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Test</span>   <span class="token keyword">void</span> <span class="token function">demo5</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token comment">//zset</span>       <span class="token comment">//zadd</span>       redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"name5"</span><span class="token punctuation">,</span><span class="token string">"v1"</span><span class="token punctuation">,</span><span class="token number">10D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"name5"</span><span class="token punctuation">,</span><span class="token string">"v2"</span><span class="token punctuation">,</span><span class="token number">15D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"name5"</span><span class="token punctuation">,</span><span class="token string">"v3"</span><span class="token punctuation">,</span><span class="token number">20D</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment">//rank</span>       <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>redisTemplate<span class="token punctuation">.</span><span class="token function">opsForZSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rank</span><span class="token punctuation">(</span><span class="token string">"name5"</span><span class="token punctuation">,</span> <span class="token string">"v1"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="特殊类型"><a href="#特殊类型" class="headerlink" title="特殊类型"></a>特殊类型</h1><h2 id="GEO"><a href="#GEO" class="headerlink" title="GEO"></a>GEO</h2><p>存储和操作地理位置信息</p><p>有添加，计算位置之间距离，根据中心点坐标和距离范围查地理位置集合</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加</span>geoadd china <span class="token number">115.7</span> <span class="token number">39.4</span> beijing<span class="token comment"># china是库名，后面是纬度和经度，最后是坐标名称</span><span class="token comment"># 读取</span>geopos china beijing<span class="token comment"># 距离</span>geodist china  beijing shanghai km<span class="token comment"># 查询china库中beijing和上海的坐标距离，最后的单位可以是m,km,ft,mi</span><span class="token comment"># 根据中心点查范围内坐标</span>georadiusbymember china beijing <span class="token number">300</span> km<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HyperLogLog"><a href="#HyperLogLog" class="headerlink" title="HyperLogLog"></a>HyperLogLog</h2><p>用来做基数统计的算法</p><p>可以去重，可以合并两个hyperloglog</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 添加</span>pfadd key名 数据<span class="token comment"># 合并</span>pfmerge key名1 key名2<span class="token comment"># 统计个数</span>pfcount key名<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="bitmap"><a href="#bitmap" class="headerlink" title="bitmap"></a>bitmap</h2><p>位图同样属于String类型，使用位来存储数据，可以节省很多空间</p><p>适用于数据量大且使用二值统计的场景</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 加入数据</span>setbit key 位 值<span class="token comment"># 表示在key的第几位插入值</span><span class="token comment"># 查看数据</span>getbit key 位<span class="token comment"># 统计所有结果</span>bitcount key <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="持久化"><a href="#持久化" class="headerlink" title="持久化"></a>持久化</h1><h2 id="RDB"><a href="#RDB" class="headerlink" title="RDB"></a>RDB</h2><p>快照方式，可压缩</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 前台阻塞保存</span>save<span class="token comment"># 后台保存</span>bgsave<span class="token comment"># 恢复数据</span>systemctl restart redis-server<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="AOF"><a href="#AOF" class="headerlink" title="AOF"></a>AOF</h2><p>记录命令，恢复时执行记录的所有命令</p><p>要在配置文件中开启</p><p>appendonly属性</p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web开发 </tag>
            
            <tag> java </tag>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/06/25/hello-world/"/>
      <url>/2023/06/25/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>找出落单的数</title>
      <link href="/2021/03/02/%E6%89%BE%E5%87%BA%E8%90%BD%E5%8D%95%E7%9A%84%E6%95%B0/"/>
      <url>/2021/03/02/%E6%89%BE%E5%87%BA%E8%90%BD%E5%8D%95%E7%9A%84%E6%95%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><p>一个数组里除了某一个数字之外，其他的数字都出现了两次。请写出程序找出这个只出现一次的数字</p><h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><p>对数组进行连续异或，重复的都会被消除，最后剩下的就是落单的数</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">T1_3</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//创建101位的数组</span>        <span class="token keyword">int</span> <span class="token class-name">N</span> <span class="token operator">=</span> <span class="token number">101</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> arr<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment">//步长为2，前100位相邻元素相同</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>            arr<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//最后一位为随机数，这里没有进行打乱</span>        arr<span class="token punctuation">[</span><span class="token class-name">N</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token class-name">N</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//连续异或，重复的都会被消掉</span>        <span class="token keyword">int</span> x1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token class-name">N</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            x1<span class="token operator">=</span>x1<span class="token operator">^</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 蓝桥杯 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
